steps:
  # Create Artifact Registry repository if it doesn't exist
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud artifacts repositories describe restaurant-agent \
          --repository-format=docker \
          --location=asia-northeast1 || \
        gcloud artifacts repositories create restaurant-agent \
          --repository-format=docker \
          --location=asia-northeast1 \
          --description="Restaurant Agent container images"

  # Build the container image for Python FastAPI agent
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-f'
      - 'Dockerfile.agent'
      - '-t'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/restaurant-agent/agent:$BUILD_ID'
      - '-t'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/restaurant-agent/agent:latest'
      - '.'
  
  # Push the container image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/restaurant-agent/agent']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'restaurant-agent'
      - '--image'
      - 'asia-northeast1-docker.pkg.dev/$PROJECT_ID/restaurant-agent/agent:$BUILD_ID'
      - '--region'
      - 'asia-northeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '100'
      - '--timeout'
      - '3600'
      - '--no-cpu-throttling'
      - '--execution-environment=gen2'
      - '--set-env-vars'
      - 'GOOGLE_CLOUD_PROJECT=$PROJECT_ID,LOCATION=asia-northeast1'
      - '--cpu-boost'

images:
  - asia-northeast1-docker.pkg.dev/$PROJECT_ID/restaurant-agent/agent:$BUILD_ID
  - asia-northeast1-docker.pkg.dev/$PROJECT_ID/restaurant-agent/agent:latest

options:
  logging: CLOUD_LOGGING_ONLY